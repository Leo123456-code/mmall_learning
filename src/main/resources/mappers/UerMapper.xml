<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.mmall.dao.UserMapper">
    <resultMap id="BaseResultMap" type="com.mmall.pojo.User">
        <constructor>
            <idArg column="id" jdbcType="INTEGER" javaType="java.lang.Integer"/>
            <arg column="username" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="password" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="email" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="phone" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="question" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="answer" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="role" jdbcType="INTEGER" javaType="java.lang.Integer"/>
            <arg column="create_time" jdbcType="TIMESTAMP" javaType="java.util.Date"/>
            <arg column="update_time" jdbcType="TIMESTAMP" javaType="java.util.Date"/>
        </constructor>
    </resultMap>
    <sql id="Base_Column_List">
        id, username, password, email, phone, question, answer, role, create_time, update_time
    </sql>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from mmall_user
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete from mmall_user
        where id = #{id,jdbcType=INTEGER}
    </delete>
    <insert id="insert" parameterType="com.mmall.pojo.User">
        insert into mmall_user (id, username, password,
        email, phone, question,
        answer, role, create_time,
        update_time)
        values (#{id,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR},
        #{email,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, #{question,jdbcType=VARCHAR},
        #{answer,jdbcType=VARCHAR}, #{role,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP},
        #{updateTime,jdbcType=TIMESTAMP})
    </insert>
    <insert id="insertSelective" parameterType="com.mmall.pojo.User">
        insert into mmall_user
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="username != null">
                username,
            </if>
            <if test="password != null">
                password,
            </if>
            <if test="email != null">
                email,
            </if>
            <if test="phone != null">
                phone,
            </if>
            <if test="question != null">
                question,
            </if>
            <if test="answer != null">
                answer,
            </if>
            <if test="role != null">
                role,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="username != null">
                #{username,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                #{password,jdbcType=VARCHAR},
            </if>
            <if test="email != null">
                #{email,jdbcType=VARCHAR},
            </if>
            <if test="phone != null">
                #{phone,jdbcType=VARCHAR},
            </if>
            <if test="question != null">
                #{question,jdbcType=VARCHAR},
            </if>
            <if test="answer != null">
                #{answer,jdbcType=VARCHAR},
            </if>
            <if test="role != null">
                #{role,jdbcType=INTEGER},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.mmall.pojo.User">
        update mmall_user
        <set>
            <if test="username != null">
                username = #{username,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                password = #{password,jdbcType=VARCHAR},
            </if>
            <if test="email != null">
                email = #{email,jdbcType=VARCHAR},
            </if>
            <if test="phone != null">
                phone = #{phone,jdbcType=VARCHAR},
            </if>
            <if test="question != null">
                question = #{question,jdbcType=VARCHAR},
            </if>
            <if test="answer != null">
                answer = #{answer,jdbcType=VARCHAR},
            </if>
            <if test="role != null">
                role = #{role,jdbcType=INTEGER},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                update_time =now(),
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.mmall.pojo.User">
        update mmall_user
        set username = #{username,jdbcType=VARCHAR},
        password = #{password,jdbcType=VARCHAR},
        email = #{email,jdbcType=VARCHAR},
        phone = #{phone,jdbcType=VARCHAR},
        question = #{question,jdbcType=VARCHAR},
        answer = #{answer,jdbcType=VARCHAR},
        role = #{role,jdbcType=INTEGER},
        create_time = #{createTime,jdbcType=TIMESTAMP},
        update_time = #{updateTime,jdbcType=TIMESTAMP}
        where id = #{id,jdbcType=INTEGER}
    </update>
    <!--  查询名字是否唯一-->
    <select id="checkUsername" resultType="int" parameterType="java.lang.String">
        select
        count(1)
        from mmall_user
        where username = #{username,jdbcType=VARCHAR}
    </select>
    <!--  selectLogin根据姓名和密码查询是否存在-->
    <select id="selectLogin" resultMap="BaseResultMap" parameterType="map">
        select
        <include refid="Base_Column_List"/>
        from mmall_user
        where username = #{username,jdbcType=VARCHAR},
        password = #{password,jdbcType=VARCHAR}
    </select>
    <!--  查询邮箱是否唯一-->
    <select id="checkEmail" resultType="int" parameterType="java.lang.String">
        select
        count(1)
        from mmall_user
        where email = #{email,jdbcType=VARCHAR}
    </select>
    <!--  根据名字查找问题-->
    <select id="selectQuestionByUsername" resultType="string" parameterType="java.lang.String">
        select
        question
        from mmall_user
        where username = #{username,jdbcType=VARCHAR}
    </select>
    <!--  //根据用户名,密码，邮箱查找答案
      //如果答案的个数大于0，表示答案正确-->
    <select id="checkAnswer" resultType="int" parameterType="map">
        select
        count(1)
        from mmall_user
        where username = #{username,jdbcType=VARCHAR}
        and question = #{question,jdbcType=VARCHAR},
        and answer = #{answer,jdbcType=VARCHAR}
    </select>
    <!--重置密码  -->
    <update id="updatePasswordByUsername" parameterType="com.mmall.pojo.User">
        update mmall_user
        set
        password = #{passwordNew,jdbcType=VARCHAR},
        update_time = now()
        where username = #{username,jdbcType=VARCHAR}
    </update>
    <!--  根据userId和Password 查询是否存在-->
    <select id="checkPasswordByUserId" resultType="int" parameterType="map">
        select
        count(1)
        from mmall_user
        where password = #{password,jdbcType=VARCHAR}
        and id = #{userId,jdbcType=INTEGER}
    </select>
    <!--查找是否有相同的email-->
    <select id="checkEmailByUserId" resultType="int" parameterType="map">
        select
        count(1)
        from mmall_user
        where email = #{email,jdbcType=VARCHAR},
        and id != #{userId,jdbcType=INTEGER}
    </select>
    <!--  获取用户信息-->
    <select id="selectInformationByUserId" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from mmall_user
        where id = #{userId,jdbcType=INTEGER}
    </select>
</mapper>